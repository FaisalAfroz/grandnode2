@model String
@inject Grand.Business.Common.Interfaces.Security.IPermissionService permissionService
@using Grand.SharedKernel.Extensions
@using Grand.Business.Common.Services.Security
@{
    var allowRoxyFileman = await permissionService.Authorize(StandardPermission.HtmlEditorManagePictures);
    var random = CommonHelper.GenerateRandomInteger();
    var param = string.IsNullOrEmpty(CommonPath.Param) ? "" : $"/{CommonPath.Param}";
}
<div id="s-@(random)-summernote" class="summernote" data-name="null" data-file="null" data-format="null">
    @Html.Raw(ViewData.TemplateInfo.FormattedModelValue)
</div>
@Html.TextArea(string.Empty, /* Name suffix */
    ViewData.TemplateInfo.FormattedModelValue /* Initial value */
)
<script>
    function elfinderDialog(context) { // <------------------ +context
        var fm = $('<div/>').dialogelfinder({
            url: '@Url.Action("Connector", "ElFinder")',
            lang: 'en',
            width: 840,
            height: 450,
            destroyOnClose: true,
            uiOptions: { // UI buttons available to the user
                toolbar: [
                    ['home', 'up'],
                    ['mkdir', 'mkfile', 'upload'],
                    ['open', 'download'],
                    ['copy', 'cut', 'paste'],
                    ['rm'],
                    ['duplicate', 'rename', 'edit'],
                    ['view', 'sort']
                ]
            },
            getFileCallback: function (file, fm) {
                $('#s-@(random)-summernote').summernote('editor.insertImage', file.url);
            },
            commandsOptions: {
                getfile: {
                    oncomplete: 'close',
                    folders: false
                }
            }
        }).dialogelfinder('instance');
    }
</script>
<script>
    $(document).ready(function () {
        $('#s-@(random)-summernote').summernote({
            toolbar: [
                ['style', ['style']],
                ['font', ['bold', 'underline', 'clear']],
                ['fontname', ['fontname']],
                ['color', ['color']],
                ['para', ['ul', 'ol', 'paragraph']],
                ['table', ['table']],
                ['insert', ['link', 'image', 'elfinder', 'hr']],
                ['view', ['fullscreen', 'codeview', 'help']],
            ],
            callbacks: {
                    onChange: function (contents) {
                            var textarea = this.nextSibling.nextElementSibling;
                            textarea.value = contents;
                        },
            },
        });
    });
</script>

