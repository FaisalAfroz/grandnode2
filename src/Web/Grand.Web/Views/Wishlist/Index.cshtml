@model WishlistModel
@inject SeoSettings seoSettings
@inject IWorkContext workContext
@inject IPageHeadBuilder pagebuilder
@{
    var supportRtl = workContext.WorkingLanguage.Rtl;
    if (supportRtl)
    {
        <link rel="stylesheet" type="text/css" asp-src="/theme/css/cart/cart.rtl.css">
    }
    else
    {
        <link rel="stylesheet" type="text/css" asp-src="/theme/css/cart/cart.css">
    }
}
@{
    Layout = "_SingleColumn";

    //title
    pagebuilder.AddTitleParts(Loc["Title.Wishlist"]);
}
<div class="page wishlist-page mt-3" id="wishlistPage">
    <h2 class="generalTitle text-center mt-3">
        @if (Model.IsEditable)
        {
            @Loc["Wishlist"]
        }
        else
        {
            @String.Format(Loc["Wishlist.WishlistOf"], Model.CustomerFullname)
        }
    </h2>
    <template v-if="wishlist.Model.Items.length > 0">
        <div class="wishlist-content mt-3">
            <template v-if="wishlist.Model.Warnings.length > 0">
                <div class="message-error">
                    <ul>
                        <template v-for="warning in wishlist.Model.Warnings">
                            <li>{{warning}}</li>
                        </template>
                    </ul>
                </div>
            </template>
            <form asp-controller="Wishlist" asp-action="Index" method="post" id="wishlist-cart-form">
                @if (!Model.IsEditable && Model.Items.Any())
                {
                    <input type="hidden" asp-for="@Model.CustomerGuid" />
                }
                <div class="shopping-cart-container">
                    <div class="static-cart">
                        <div id="wishlist-cart">
                            <table id="cart-table" class="table b-table shopping-cart">
                                <thead role="rowgroup">
                                    <tr role="row">
                                        <template v-if="wishlist.Model.ShowProductImages">
                                            <th role="columnheader" scope="col" class="text-center">
                                                <div>@Loc["ShoppingCart.Image"]</div>
                                            </th>
                                        </template>
                                        <th role="columnheader" scope="col" class="text-center">
                                            <div>@Loc["ShoppingCart.Product(s)"]</div>
                                        </th>
                                        <th role="columnheader" scope="col" class="text-center">
                                            <div>@Loc["ShoppingCart.Quantity"]</div>
                                        </th>
                                        <th role="columnheader" scope="col" class="text-center">
                                            <div>@Loc["ShoppingCart.UnitPrice"]</div>
                                        </th>
                                        <th role="columnheader" scope="col" class="text-center">
                                            <div>@Loc["ShoppingCart.ItemTotal"]</div>
                                        </th>
                                        <template v-if="wishlist.Model.IsEditable || wishlist.Model.DisplayAddToCart">
                                            <template v-if="wishlist.Model.IsEditable">
                                                <th role="columnheader" scope="col" class="text-center">
                                                    <div>@Loc["Remove"]</div>
                                                </th>
                                            </template>
                                            <template v-if="wishlist.Model.DisplayAddToCart">
                                                <th role="columnheader" scope="col" class="text-center">
                                                    <div>@Loc["addToCart"]</div>
                                                </th>
                                            </template>
                                        </template>
                                    </tr>
                                </thead>
                                <tbody role="rowgroup">
                                    <template v-for="item in wishlist.Model.Items">
                                        <tr role="row">
                                            <template v-if="wishlist.Model.ShowProductImages">
                                                <td role="cell" class="text-center">
                                                    <div>
                                                        <a :href="item.ProductUrl">
                                                            <img :alt="item.Picture.AlternateText" :src="item.Picture.ImageUrl" :title="item.Picture.Title" />
                                                        </a>
                                                    </div>
                                                </td>
                                            </template>
                                            <td role="cell" class="text-center">
                                                <div>
                                                    <a :href="item.ProductUrl" class="product-name">{{item.ProductName}}</a>
                                                </div>
                                                <template v-if="wishlist.Model.ShowSku && item.Sku !== null">
                                                    <span class="sku-number">{{item.Sku}}</span>
                                                </template>
                                                <template v-if="item.AttributeInfo !== null">
                                                    <div class="attributes small" v-html="item.AttributeInfo"></div>
                                                </template>
                                                <template v-if="item.Warnings.length > 0">
                                                    <div class="warnings small alert alert-danger mt-2 mb-0">
                                                        <ul class="mb-0 p-0">
                                                            <template v-for="warning in item.Warnings">
                                                                <li>{{warning}}</li>
                                                            </template>
                                                        </ul>
                                                    </div>
                                                </template>
                                                <template v-if="item.RecurringInfo !== null">
                                                    <div class="recurring-info" v-html="item.RecurringInfo"></div>
                                                </template>
                                                <template v-if="wishlist.Model.IsEditable && item.AllowItemEditing">
                                                    <a class="btn btn-sm btn-secondary mt-2" @@click="wishlist.getItemCart(item.Id)">@Loc["Common.Edit"]</a>
                                                </template>
                                            </td>
                                            <template v-if="wishlist.Model.IsEditable">
                                                <td role="cell" class="text-center">
                                                    <template v-if="item.AllowedQuantities[0]">
                                                        <select :id="'itemquantity' + item.Id" :name="'itemquantity' + item.Id" class="custom-select form-control qty-dropdown" v-on:change="wishlist.changeQuantity('itemquantity', item.Id)">
                                                            <template v-for="qty in item.AllowedQuantities">
                                                                <option :id="'itemqty' + item.Id" :selected="qty.Selected" :value="qty.Value">{{qty.Value}}</option>
                                                            </template>
                                                        </select>
                                                    </template>
                                                    <template v-else>
                                                        <input :id="'itemquantity' + item.Id" :name="'itemquantity' + item.Id" type="number" :value="item.Quantity" min="1" v-on:change="wishlist.changeQuantity('itemquantity', item.Id)" class="qty-input form-control text-center" />
                                                    </template>
                                                </td>
                                            </template>
                                            <template v-else>
                                                <td role="cell" class="text-center">
                                                    <input :id="'itemquantity' + item.Id" :name="'itemquantity' + item.Id" type="text" :value="item.Quantity" class="qty-input-ro form-control text-center" readonly />
                                                </td>
                                            </template>
                                            <td role="cell" class="text-center">
                                                <span class="product-unit-price price">{{item.UnitPrice}}</span>
                                            </td>
                                            <template v-if="item.Discount !== null">
                                                <td role="cell" class="text-center">
                                                    <div class="d-flex flex-column">
                                                        <p class="mb-0 prod-total">{{item.SubTotal}}</p><div class="discount text-success text-center"><span>@Loc["ShoppingCart.ItemYouSave"]: </span><span>{{item.Discount}}</span></div>
                                                    </div>
                                                </td>
                                            </template>
                                            <template v-else>
                                                <td role="cell" class="text-center">
                                                    <p class="mb-0 prod-total">{{item.SubTotal}}</p>
                                                </td>
                                            </template>
                                            <template v-if="wishlist.Model.IsEditable || wishlist.Model.DisplayAddToCart">
                                                <template v-if="wishlist.Model.IsEditable">
                                                    <td>
                                                        <b-button variant="link" @@click="wishlist.deleteFromWishlist(item.Id)">
                                                            <b-icon icon="trash" font-scale="1.5" class="text-danger"></b-icon>
                                                        </b-button>
                                                    </td>
                                                </template>
                                                <template v-if="wishlist.Model.DisplayAddToCart">
                                                    <td>
                                                        <b-button variant="link" @@click="wishlist.addToCartFromWishlist(item.Id)">
                                                            <b-icon icon="cart" font-scale="1.5" class="text-info"></b-icon>
                                                        </b-button>
                                                    </td>
                                                </template>
                                            </template>
                                        </tr>
                                    </template>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="btn-group my-3">
                    @if (Model.IsEditable && Model.EmailWishlistEnabled)
                    {
                        <button type="button" class="btn btn-secondary email-a-friend-wishlist-button d-flex align-items-center ml-1" onclick="location='@Url.RouteUrl("EmailWishlist")'">
                            <b-icon font-scale="2" icon="envelope" class="pr-2"></b-icon>
                            <span class="d-sm-block d-none">@Loc["Wishlist.EmailAFriend"]</span>
                        </button>
                    }
                </div>
            </form>
        </div>
    </template>
    <template v-else>
        <div class="no-data alert alert-info text-center">
            @Loc["Wishlist.CartIsEmpty"]
        </div>
    </template>
    <template v-if="wishlist.Model.IsEditable && wishlist.Model.Items.length > 0">
        <div class="row">
            <div class="col-12 share-info generalMarginSupporter text-center text-md-left">
                <span class="share-label">@Loc["Wishlist.YourWishlistURL"]:</span>
                <a href="@Url.RouteUrl("Wishlist", new { customerGuid = Model.CustomerGuid })" class="small ml-2">@Url.RouteUrl("Wishlist", new { customerGuid = Model.CustomerGuid }, "http")</a>
            </div>
        </div>
    </template>
</div>
<script asp-location="Header">
    var Wishlist = Vue.extend({
        props: {
            Model: null,
            PopupUpdateVueModal: null,
            UpdatedShoppingCartItemId: null
        },
        mounted() {
            this.Model = @Json.Serialize(Model);
        },
        methods: {
            deleteFromWishlist(id) {
                axios({
                    url: '@Url.RouteUrl("DeleteItemFromWishlist")'+'/'+ id +'',
                    method: 'post',
                    headers: { 'Content-Type': 'application/json' }
                }).then(function (response) {
                    if (response.data.success) {
                        wishlist.getWishlist();
                    } else {
                        wishlist.displayWarning(response.data.message);
                    }
                });
            },
            addToCartFromWishlist(id) {
                axios({
                    url: '@Url.RouteUrl("AddItemToCartFromWishlist")'+'/' + id,
                    method: 'post',
                    headers: { 'Content-Type': 'application/json' }
                }).then(function (response) {
                    if (response.data.success) {
                        wishlist.getWishlist();
                    } else {
                        wishlist.displayWarning(response.data.message);
                    }
                });
            },
            getItemCart(id) {
                axios({
                    url: '@Url.RouteUrl("GetItemCart")'+'/'+ id,
                    method: 'get',
                    headers: { 'Content-Type': 'application/json' }
                }).then(function (response) {
                    if (response.data.success) {
                        vm.PopupQuickViewVueModal = response.data.model;
                        wishlist.UpdatedShoppingCartItemId = id;
                        vm.$refs['ModalQuickView'].show();
                    } else {
                        wishlist.displayWarning(response.data.message);
                    }
                });
            },
            changeQuantity(element, id) {
                var elementById = document.getElementById(element + id);
                var data = new FormData();
                data.append('shoppingcartId', id);
                data.append('quantity', elementById.value);
                data.append('__RequestVerificationToken',
                    document.querySelector('input[name=__RequestVerificationToken]').value);

                axios({
                    method: 'post',
                    data: data,
                    url: '@Url.RouteUrl("UpdateWishlist")',
                }).then(function (response) {
                    if (response.data.success) {
                        if (document.querySelector('.wishlist-qty')) {
                            document.querySelector('.wishlist-qty').innerHTML = response.data.totalproducts;
                        }
                    }
                    else {
                        wishlist.displayWarning(response.data.warnings);
                    }
                })
            },
            getWishlist() {
                axios({
                    baseURL: '@Url.RouteUrl("Wishlist")',
                    method: 'get',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json',
                        'X-Response-View': 'Json'
                    }
                }).then(function (response) {
                    wishlist.Model = response.data;
                    if (document.querySelector('.wishlist-qty')) {
                        document.querySelector('.wishlist-qty').innerHTML = response.data.Items.length;
                    }
                }).then(function () {
                    vm.updateFly();
                });
            },
            displayWarning(message) {
                this.$bvToast.toast(message, {
                    title: '@Loc["common.warning"]',
                    variant: 'danger',
                    autoHideDelay: 5000,
                    appendToast: true
                })
            }
        }
    });
    var wishlist = new Wishlist().$mount('#wishlistPage')
</script>